# enter and goto room
headpose_0_-10;
vsay_dooropen;
waitfor_dooropen;
vsay_starting;
wait_2;
enter_30_0_0_4_true; 
navigateto_living1;  # TODO check location of party room toponav
turn_90_ABS|10;

#ORDER 1
vsay_ordercomehere; 
waitfor_personhere; ! *if* timeout_waitfor_20 *do* vsay_comehere; restart_action !

dialogue_takeorder;
vsay_memorizeperson;
memorizeface_inmemory_Profile1;
vsay_thanks;
turn_-20;
wait_5;

#ORDER 2
vsay_ordercomehere; 
waitfor_personhere; ! *if* timeout_waitfor_20 *do* vsay_comehere; restart_action !

dialogue_takeorder;
vsay_memorizeperson;
memorizeface_inmemory_Profile2;
vsay_thanks;
turn_20;
wait_5;

#ORDER 3
lookfor_sittingperson|10;
approach_^personsitting/id
dialogue_takeorder;
vsay_memorizeperson;
memorizeface_inmemory_Profile3;
vsay_thanks;

#PLACING ORDERS
navigateto_sofaside; #TODO check toponav
turn_45_ABS|10;
#TODO: person description
dialogue_unknownavailable_1;
dialogue_unknownavailable_2;
dialogue_unknownavailable_3;

navigateto_living1;  # TODO check location of party room toponav
turn_90_ABS|10;


#vsay_callpersonunavailable; 
#waitfor_personhere;
#dialogue_providealternatives;

#navigateto_bar;
#vsay_confirmalternativedrink;

#navigateto_hall;
#navigateto_start;









#< persondetected? turn_90 >

# second order
#lookfor_persondetected|20;  # timeout in seconds
#< persondetected? goto_person :
#  (not persondetected)? say_comehere >;
#waitfor_personhere; ! *if* timeout_waitfor_120 *do* GOTO_LABEL_NEXT_PERSON !
#dialogue_takeorder;

# look for another person ???

#turn_90_REL;

#LABEL_NEXT_PERSON;

# third order (sitting person not calling)
#lookfor_sittingperson|10;   # TODO missing condition sittingperson
#< persondetected? 
#    goto_person;
#    dialogue_takeorder;
#>;


# FROM HERE IT MUST BE COMPLETED AND TESTED

# check valid orders received in previous phase

#< valid_order1 ?
#    vsay_order_1;  # robot describes the info in Humans/ProfileX 
#    observe_objects;
#    < drinkavailable ? vsay_confirmdrink_1 :
#      not_drinkavailable ? vsay_confirmnotavailable_1; dialogue_altdrink_1  :
#      unknown_drinkavailable ? dialogue_unknownavailable_1;  > :
#  (not valid_order1)? 
#>;

#< valid_order2 ?
#    say_order_2;
#    observe_objects;
#    < drinkavailable ? say_confirmdrink :
#      not_drinkavailable ? choosealt_order2; say_altorder2  :
#      unknown_drinkavailable ? ask_altdrink; answer_altorder2  > :
#  (not valid_order2)? 
#>;

#< valid_order3 ?
#    say_order_3;
#    observe_objects;
#    < drinkavailable ? say_confirmdrink :
#      not_drinkavailable ? choosealt_order3; say_altorder3  :
#      unknown_drinkavailable ? ask_altdrink; answer_altorder3  > :
#  (not valid_order3)? 
#>;






