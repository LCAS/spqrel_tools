# enter and goto room
waitfor_dooropen;
goto_entrance;
#goto_partyroom;  # TODO set location of party room


# order_n (n=1,2,3,4) is a data structure containing information about an order
# including: name of person, drink ordered, features of person, person location, ...

# first order
lookfor_persondetected|60;  # timeout in seconds

< persondetected? goto_person :
  (not persondetected)? say_comehere >;

waitfor_personhere; ! *if* timeout_waitfor_60 *do* say_comehere; restart_action !

dialogue_takeorder;

#acquire_perceptual_information # TODO this is just a placeholder. the idea is to acquire the information here


# look for another person ???
# goto another waypoint
turn_90_REL;
wait_10;  # wait that previous persondetected is forgot

# second order
lookfor_persondetected|60;  # timeout in seconds
< persondetected? goto_person :
  (not persondetected)? say_comehere >;
waitfor_personhere; ! *if* timeout_waitfor_120 *do* GOTO_LABEL_NEXT_PERSON !
dialogue_takeorder;

# look for another person ???

turn_90_REL;

LABEL_NEXT_PERSON;

# third order (sitting person not calling)
#lookfor_sittingperson|10;   # TODO missing condition sittingperson
#< persondetected? 
#    goto_person;
#    dialogue_takeorder;
#>;

LABEL_BAR;

goto_bar;

# FROM HERE IT MUST BE COMPLETED AND TESTED

# check valid orders received in previous phase

< valid_order1 ?
    vsay_order_1;  # robot describes the info in Humans/ProfileX 
    observe_objects;
    < drinkavailable ? vsay_confirmdrink_1 :
      not_drinkavailable ? vsay_confirmnotavailable_1; dialogue_altdrink_1  :
      unknown_drinkavailable ? dialogue_unknownavailable_1;  > :
  (not valid_order1)? 
>;

< valid_order2 ?
    say_order_2;
    observe_objects;
    < drinkavailable ? say_confirmdrink :
      not_drinkavailable ? choosealt_order2; say_altorder2  :
      unknown_drinkavailable ? ask_altdrink; answer_altorder2  > :
  (not valid_order2)? 
>;

< valid_order3 ?
    say_order_3;
    observe_objects;
    < drinkavailable ? say_confirmdrink :
      not_drinkavailable ? choosealt_order3; say_altorder3  :
      unknown_drinkavailable ? ask_altdrink; answer_altorder3  > :
  (not valid_order3)? 
>;


# go back to party room to receive the corrected order
# altorder is either altorder1,2,3

goto_partyroom;
say_callperson_altorder; 
waitfor_personhere;
vsay_altorder_4; # robot speaks alternative drinks 
dialogue_takeorder_4;
waitfor_order4;

# go back to bar to place the corrected order
goto_bar;
say_order4;
say_goodbye;


# exit the arena
goto_entrance;
goto_exit;




